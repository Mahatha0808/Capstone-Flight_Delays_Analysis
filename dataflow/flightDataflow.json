{
	"name": "flightDataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "FlightRawData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "cleanedflightData",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "RemovingUncessaryCol"
				},
				{
					"name": "droppingnullvalue"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          FlightID as integer,",
				"          Airline as string,",
				"          FlightNumber as integer,",
				"          OriginAirport as string,",
				"          DestinationAirport as string,",
				"          ScheduledDeparture as timestamp,",
				"          ActualDeparture as timestamp,",
				"          ScheduledArrival as timestamp,",
				"          ActualArrival as timestamp,",
				"          DepartureDelay as float,",
				"          ArrivalDelay as float,",
				"          Cancelled as boolean,",
				"          CancellationReason as string,",
				"          Diverted as boolean,",
				"          AirTime as float,",
				"          Distance as integer,",
				"          TaxiOut as string,",
				"          TaxiIn as string,",
				"          CarrierDelay as string,",
				"          WeatherDelay as string,",
				"          NASDelay as string,",
				"          SecurityDelay as string,",
				"          LateAircraftDelay as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     partitionBy('fixed', 2,",
				"          ERROR_FUNCTION('')",
				"     )) ~> FlightRawData",
				"FlightRawData select(mapColumn(",
				"          FlightID,",
				"          Airline,",
				"          FlightNumber,",
				"          OriginAirport,",
				"          DestinationAirport,",
				"          ScheduledDeparture,",
				"          ActualDeparture,",
				"          ScheduledArrival,",
				"          ActualArrival,",
				"          DepartureDelay,",
				"          ArrivalDelay,",
				"          Cancelled,",
				"          CancellationReason,",
				"          Diverted,",
				"          AirTime,",
				"          Distance",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RemovingUncessaryCol",
				"RemovingUncessaryCol filter(!isNull(ScheduledDeparture)&&",
				"!isNull(ActualDeparture)&&",
				"!isNull(ScheduledArrival)&&",
				"!isNull(ActualArrival) &&",
				"(Airline != \"UNKNOWN\")",
				") ~> droppingnullvalue",
				"droppingnullvalue derive(CancellationReason = iif(isNull(CancellationReason),\"Unknown\",CancellationReason),",
				"          DepartureDelay = iif(isNull(DepartureDelay),0.0,DepartureDelay)) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}